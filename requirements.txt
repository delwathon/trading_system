# Enhanced Bybit Trading System - Dependencies
# Core trading and analysis dependencies

# =============================================================================
# EXCHANGE CONNECTIVITY
# =============================================================================
ccxt>=4.1.0                     # Unified cryptocurrency exchange API
requests>=2.31.0                # HTTP library for API requests
urllib3>=2.0.0                  # HTTP client library

# =============================================================================
# DATA PROCESSING & ANALYSIS
# =============================================================================
pandas>=2.0.0                   # Data manipulation and analysis
numpy>=1.24.0                   # Numerical computing
ta>=0.10.2                      # Technical analysis indicators library
scipy>=1.10.0                   # Scientific computing

# =============================================================================
# MACHINE LEARNING
# =============================================================================
scikit-learn>=1.3.0             # Machine learning algorithms
joblib>=1.3.0                   # Parallel computing for ML

# =============================================================================
# VISUALIZATION & CHARTS
# =============================================================================
plotly>=5.17.0                  # Interactive charts and graphs
kaleido>=0.2.1                  # Static image export for plotly (REQUIRED for JPG export)
pillow>=10.0.0                  # Image processing library

# =============================================================================
# CONFIGURATION & UTILITIES
# =============================================================================
pyyaml>=6.0.1                   # YAML configuration file parsing
python-dateutil>=2.8.2          # Date/time utilities
pytz>=2023.3                    # Timezone handling

# =============================================================================
# SYSTEM MONITORING
# =============================================================================
psutil>=5.9.0                   # System and process monitoring
logging>=0.4.9.6                # Enhanced logging capabilities

# =============================================================================
# TEXT PROCESSING (Optional - for sentiment analysis)
# =============================================================================
textblob>=0.17.1                # Natural language processing
nltk>=3.8.1                     # Natural language toolkit

# =============================================================================
# DEVELOPMENT & TESTING (Optional)
# =============================================================================
pytest>=7.4.0                   # Testing framework
pytest-cov>=4.1.0               # Coverage testing
black>=23.7.0                   # Code formatting
flake8>=6.0.0                   # Code linting
mypy>=1.5.0                     # Type checking

# =============================================================================
# PERFORMANCE OPTIMIZATION
# =============================================================================
cython>=3.0.0                   # Performance optimization
numba>=0.57.0                   # JIT compilation for numerical functions

# =============================================================================
# ASYNC SUPPORT (Optional - for advanced features)
# =============================================================================
asyncio>=3.4.3                  # Asynchronous programming
aiohttp>=3.8.0                  # Async HTTP client
websockets>=11.0.0              # WebSocket support

# =============================================================================
# DATABASE SUPPORT (Optional - for data persistence)
# =============================================================================
sqlalchemy>=2.0.0               # SQL toolkit and ORM
# sqlite3                         # Built-in SQLite support
redis>=4.6.0                    # Redis client for caching

# =============================================================================
# NOTIFICATION SYSTEMS (Optional)
# =============================================================================
# smtplib                         # Built-in email support
twilio>=8.5.0                   # SMS notifications
python-telegram-bot>=20.0       # Telegram bot API
discord.py>=2.3.0               # Discord notifications

# =============================================================================
# ENCRYPTION & SECURITY
# =============================================================================
cryptography>=41.0.0            # Cryptographic recipes and primitives
keyring>=24.0.0                 # Password storage

# =============================================================================
# EXPORT & REPORTING
# =============================================================================
openpyxl>=3.1.0                 # Excel file support
reportlab>=4.0.0                # PDF generation
jinja2>=3.1.0                   # Template engine for reports

# =============================================================================
# ADDITIONAL TECHNICAL INDICATORS
# =============================================================================
# talib-binary>=0.4.24            # Technical Analysis Library (binary)
finta>=1.3                      # Financial Technical Analysis
pandas-ta>=0.3.14b              # Additional technical analysis

# =============================================================================
# MATHEMATICAL LIBRARIES
# =============================================================================
sympy>=1.12                     # Symbolic mathematics
statsmodels>=0.14.0             # Statistical modeling

# =============================================================================
# MEMORY OPTIMIZATION
# =============================================================================
memory-profiler>=0.61.0         # Memory usage profiling
objgraph>=3.6.0                 # Object reference tracking

# =============================================================================
# CONCURRENT PROCESSING
# =============================================================================
# concurrent-futures>=3.1.1       # Concurrent execution
multiprocessing>=0.70.15        # Parallel processing
threading>=0.2.2                # Thread-based parallelism

# =============================================================================
# RATE LIMITING & THROTTLING
# =============================================================================
ratelimit>=2.2.1                # Rate limiting utilities
backoff>=2.2.1                  # Exponential backoff

# =============================================================================
# CONFIGURATION VALIDATION
# =============================================================================
cerberus>=1.3.5                 # Data validation
marshmallow>=3.20.0             # Object serialization/deserialization
pydantic>=2.4.0                 # Data validation using type hints

# =============================================================================
# PROGRESS TRACKING
# =============================================================================
tqdm>=4.66.0                    # Progress bars
rich>=13.5.0                    # Rich terminal output

# =============================================================================
# TIME SERIES ANALYSIS
# =============================================================================
arch>=6.2.0                     # ARCH models for volatility
pykalman>=0.9.5                 # Kalman filtering

# =============================================================================
# MINIMUM VERSIONS FOR COMPATIBILITY
# =============================================================================
python-dateutil>=2.8.2
six>=1.16.0
setuptools>=68.0.0
wheel>=0.41.0
pip>=23.0.0

# =============================================================================
# PLATFORM-SPECIFIC DEPENDENCIES
# =============================================================================
# Windows-specific
pywin32>=306; sys_platform == "win32"
wmi>=1.5.1; sys_platform == "win32"

# Linux-specific  
python-dev; sys_platform == "linux"

# macOS-specific
pyobjc>=9.2; sys_platform == "darwin"

# =============================================================================
# JUPYTER NOTEBOOK SUPPORT (Optional)
# =============================================================================
jupyter>=1.0.0                  # Jupyter notebook
ipywidgets>=8.1.0               # Interactive widgets
matplotlib>=3.7.0               # Basic plotting (fallback)

# =============================================================================
# PACKAGE MANAGEMENT
# =============================================================================
pip-tools>=7.3.0                # Requirements management
pipdeptree>=2.13.0              # Dependency tree visualization

# =============================================================================
# DOCUMENTATION (Optional)
# =============================================================================
sphinx>=7.1.0                   # Documentation generation
sphinx-rtd-theme>=1.3.0         # Read the Docs theme

# =============================================================================
# NOTES FOR INSTALLATION
# =============================================================================
# 
# For minimal installation (core functionality only):
# pip install ccxt pandas numpy ta plotly pyyaml psutil
#
# For development setup:
# pip install -r requirements.txt
#
# For production deployment:
# pip install --no-dev -r requirements.txt
#
# Platform-specific installation notes:
# - Windows: May require Visual Studio Build Tools for some packages
# - Linux: Install python3-dev package via system package manager
# - macOS: Install Xcode command line tools
#
# Performance optimization:
# - Install talib-binary for faster technical analysis
# - Use conda for scientific computing packages when possible
# - Consider using virtual environments for isolation
#
# Memory optimization:
# - Use pandas with minimal dependencies
# - Consider using modin for large datasets
# - Monitor memory usage with memory-profiler
#
# =============================================================================
# VERSION COMPATIBILITY
# =============================================================================
# Python 3.8+ required
# Tested on Python 3.8, 3.9, 3.10, 3.11
# 
# Last updated: December 2024
# =============================================================================